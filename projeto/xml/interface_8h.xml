<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="interface_8h" kind="file" language="C++">
    <compoundname>interface.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includedby refid="lista_8c" local="yes">lista.c</includedby>
    <includedby refid="logica_8c" local="yes">logica.c</includedby>
    <includedby refid="rastros_8c" local="yes">rastros.c</includedby>
    <incdepgraph>
      <node id="20">
        <label>interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="interface_8h_1a9c7d524ac924a134b255a07981ac993c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void desenha_tabuleiro</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>desenha_tabuleiro</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Funçao que desenha o tabuleiro de acordo com o estado dado. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface.h" line="16" column="1" bodyfile="interface.c" bodystart="15" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1aba63ec0328956b851d7a09ee8d3c5a90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void grava_tabuleiro</definition>
        <argsstring>(ESTADO *e, FILE *filename)</argsstring>
        <name>grava_tabuleiro</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Funçao que grava o tabuleiro, num ficheiro .txt especificado, de acordo com o estado atual do jogo. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Nome do ficheiro onde se guardara o tabuleiro. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface.h" line="24" column="1" bodyfile="interface.c" bodystart="106" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a23c49c2e0c607f12b537580469548ed1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void imprime_estado</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>imprime_estado</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Funçao que desenha o prompt do jogo de acordo com o estado atual. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>A coordenada. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface.h" line="33" column="1" bodyfile="interface.c" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a0034f48efad2f088f2d2ef7eee83c479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void imprime_estadoI</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>imprime_estadoI</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Funçao que desenha o prompt do jogo de acordo com o estado lido. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface.h" line="39" column="1" bodyfile="interface.c" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1ab8dea779c8d414e1393939c6e6e0ef28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gravar</definition>
        <argsstring>(ESTADO *e, const char *filename, const char *mode)</argsstring>
        <name>gravar</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Funçao que grava num documento .txt especificado o tabuleiro do estado atual e o respetivo prompt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Nome do ficheiro .txt onde se ira gravar tabuleiro e o prompt. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Modo de uso do ficheiro, dado ao fopen, por exemplo para escrever ou apenas para leitura. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface.h" line="47" column="1" bodyfile="interface.c" bodystart="122" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a99e6cf4fe626819f15d258723f990f86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int le_tabuleiro</definition>
        <argsstring>(ESTADO *e, FILE *fp)</argsstring>
        <name>le_tabuleiro</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
<para>Funçao que le o tabuleiro no ficheiro e conta o numero de jogadas realizadas. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fp</parametername>
</parameternamelist>
<parameterdescription>
<para>Nome do ficheiro .txt onde se ira gravar tabuleiro e o prompt. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Numero de jogadas realizadas no tabuleiro lido. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface.h" line="56" column="1" bodyfile="interface.c" bodystart="133" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1acb45a4bd8a253dbe5d2f14ebd9ec82a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ler</definition>
        <argsstring>(ESTADO *e, const char *filename, const char *mode)</argsstring>
        <name>ler</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Funçao que le o tabuleiro e respetivo prompt de um ficheiro .txt especificado. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Nome do ficheiro .txt onde se ira ler tabuleiro e o prompt. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Modo de uso do ficheiro, neste caso, read. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface.h" line="65" column="1" bodyfile="interface.c" bodystart="149" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a39908e7cee1866f1a77081cb0e2069cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void flista_ronda</definition>
        <argsstring>(ESTADO *e, int i, FILE *filename)</argsstring>
        <name>flista_ronda</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Funçao que imprime uma dada ronda consoante o argumento i passado. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Indice </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Ficheiro </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface.h" line="76" column="1" bodyfile="interface.c" bodystart="44" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1adc656c53fad066e70dac7760dfeb7438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void flista_movimentos</definition>
        <argsstring>(ESTADO *e, FILE *filename)</argsstring>
        <name>flista_movimentos</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Funçao nao terminada que ira imprimir os movimentos ja realizados no jogo. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface.h" line="82" column="1" bodyfile="interface.c" bodystart="55" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1af5991c1f67cfbe3ed1507f2396b1e36f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lista_ronda</definition>
        <argsstring>(ESTADO *e, int i)</argsstring>
        <name>lista_ronda</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Funçao que imprime uma dada ronda consoante o argumento i passado. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Indice </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface.h" line="90" column="1" bodyfile="interface.c" bodystart="74" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1aff864d63fae0837104ff8614083f7a29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lista_movimentos</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>lista_movimentos</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Funcao que imprime a lista de movimentos efetuados. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface.h" line="96" column="1" bodyfile="interface.c" bodystart="85" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a8bf790cd68112593bf4fbe3d7f588828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void limpa_jogadas</definition>
        <argsstring>(ESTADO *e, int n_rondas, int indice, int impar, COORDENADA cord1, COORDENADA cord2)</argsstring>
        <name>limpa_jogadas</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_rondas</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indice</declname>
        </param>
        <param>
          <type>int</type>
          <declname>impar</declname>
        </param>
        <param>
          <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
          <declname>cord1</declname>
        </param>
        <param>
          <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
          <declname>cord2</declname>
        </param>
        <briefdescription>
<para>funcao auxiliar da pos que limpa as jogadas ja realizadas do tabuleiro </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_rondas</parametername>
</parameternamelist>
<parameterdescription>
<para>numero de rondas realizadas no tabuleiro. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_jogadas</parametername>
</parameternamelist>
<parameterdescription>
<para>numero de jogadas realizadas no tabuleiro. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indice</parametername>
</parameternamelist>
<parameterdescription>
<para>Indice da ronda para retornar. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>impar</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicador se o numero de jogadas e impar ou par. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cord1</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada do jogador 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cord2</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada do jogador 2. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface.h" line="110" column="1" bodyfile="interface.c" bodystart="187" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a081d3b0d4f218aae3cd87928cae323df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void volta_tabuleiro</definition>
        <argsstring>(ESTADO *e, int indice)</argsstring>
        <name>volta_tabuleiro</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indice</declname>
        </param>
        <briefdescription>
<para>Funcao que retorna o tabuleiro para uma ronda especificada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indice</parametername>
</parameternamelist>
<parameterdescription>
<para>Indice da ronda </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface.h" line="117" column="1" bodyfile="interface.c" bodystart="204" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1aa1df7abe318da18c09c5e40e05b6bc1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pos</definition>
        <argsstring>(ESTADO *e, int n_ronda)</argsstring>
        <name>pos</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_ronda</declname>
        </param>
        <briefdescription>
<para>Funcao que reverte o estado do jogo para onde é pretendido. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_ronda</parametername>
</parameternamelist>
<parameterdescription>
<para>Ronda a qual se quer regresar </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface.h" line="124" column="1" bodyfile="interface.c" bodystart="228" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a24da95ebeede4a540e37790ce8be359b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int interpretador</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>interpretador</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Funçao principal deste modulo, que recolhe o comando dado pelo jogador e o executa. Comandos : jogada (linha, coluna): executa a funçao jogar para, se possivel realizar a jogada desejada. gr: grava o estado atual do jogo num ficheiro .txt aparte para futura continuaçao do jogo se desejado. ler: altera o estado do jogo para o gravado num ficheiro .txt para continuar o jogo neste guardado. movs: lista os movimentos realizadas pos: Volta atrás a uma ronda pretendida jog: jogada automática aleatória jog2: jogada automática seguindo um pensamento euclidiano q: termina o jogo. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 Caso o jogo continue. </para></simplesect>
<simplesect kind="return"><para>0 Caso o jogo termine. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface.h" line="144" column="1" bodyfile="interface.c" bodystart="248" bodyend="320"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Funçoes que interpretam os comandos dados pelo jogador. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>runlo<sp/>on<sp/>09/03/20.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>___INTERPRETADOR_H___</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>___INTERPRETADOR_H___</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1a9c7d524ac924a134b255a07981ac993c" kindref="member">desenha_tabuleiro</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1aba63ec0328956b851d7a09ee8d3c5a90" kindref="member">grava_tabuleiro</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,FILE<sp/>*filename);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//COMANDOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1a23c49c2e0c607f12b537580469548ed1" kindref="member">imprime_estado</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1a0034f48efad2f088f2d2ef7eee83c479" kindref="member">imprime_estadoI</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1ab8dea779c8d414e1393939c6e6e0ef28" kindref="member">gravar</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mode);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1a99e6cf4fe626819f15d258723f990f86" kindref="member">le_tabuleiro</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,FILE<sp/>*fp);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1acb45a4bd8a253dbe5d2f14ebd9ec82a5" kindref="member">ler</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mode);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MOVS<sp/>///</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1a39908e7cee1866f1a77081cb0e2069cf" kindref="member">flista_ronda</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,FILE<sp/>*filename);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1adc656c53fad066e70dac7760dfeb7438" kindref="member">flista_movimentos</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,FILE<sp/>*filename);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1af5991c1f67cfbe3ed1507f2396b1e36f" kindref="member">lista_ronda</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1aff864d63fae0837104ff8614083f7a29" kindref="member">lista_movimentos</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>POS//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1a8bf790cd68112593bf4fbe3d7f588828" kindref="member">limpa_jogadas</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_rondas,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indice,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>impar,<sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>cord1,<sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>cord2);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1a081d3b0d4f218aae3cd87928cae323df" kindref="member">volta_tabuleiro</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indice);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1aa1df7abe318da18c09c5e40e05b6bc1d" kindref="member">pos</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_ronda);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>/////////////////////////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//INTERPRETADOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1a24da95ebeede4a540e37790ce8be359b" kindref="member">interpretador</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//___INTERPRETADOR_H__</highlight></codeline>
    </programlisting>
    <location file="interface.h"/>
  </compounddef>
</doxygen>
